Получая физический доступ к консоли и возможность физической перезагрузки, получаете неограниченный доступ к системе!!! Пункты 'Setup' и '6' в порядке включения и загрузки системы. 

Решение:

ограничением физического доступа
(частичное решение) шифрование дисков с физически удаляемым сложным ключем.
1 - POST - Power On Self Test - подпрограммы BIOS

Setup - живет в BIOS

2 - ROM - чтение энергонезависимой памяти с порядком загрузки

3 - Выбор носителя для загрузки

4 - MBR - Master Boot Record

5 - PRB - Partition Boot Record

6 - OS Loader - принимает параметры загрузки ядра и загружает ядро. Возможна передача аргументов (параметров ядра)

7 - Kernel - vmlinuz, initrd

8 - Монтирование корневой файловой системы

/sbin/init - запуск первого процесса

___________

Kernel состоит из двух файлов - основа ядра vmlinuz и достаточное количество модулей .ko (kernel objects) в файле initrd.

vmlinuz - основа ядра. Содержит менеджер памяти, менеджер процессов, файловая подсистема, менеджер ввода/вывода, иные менеджеры необходимые для работы настоящей сборки. Основа ядра не содержит никаких модулей взаимодействия с железом. 

initrd (initial ram disk) иногда попадается как initramfs (все то же самое, только вместо disk в конце file system) - специального вида архив с достаточным количеством модулей .ko, и еще несколько штукенций о которых ниже вместе со вскрытием initrd.

NB! Debian в основе не всегда имеет ядро Linux. Может работать на FreeBSD (Debian GNU/FreeBSD), на Hurd (Debian GNU/Hurd), и еще есть варианты. CentOS же работает исключительно на ядре Linux. Arch то же.

$ man boot - мануал по OS

$ uname -r - версия ядра (-a - версия всей системы)

$ apt search kernel - много всего интересного. Можно чего нить грепнуть

$ apt install linux-doc - установить и позырить актуальную спецификацию по ядру Linux

$ dpkg -L linux-doc - найти куда встала, обычно /usr/share/doc/linux-doc

$ cd /usr/share/doc/linux-doc - много всего интересного есть что почитать

Как посмотреть что в initrd:

$ file /boot/initrd.img-5.10.0.17-amd64 (или тот что там будет соответственно, но! там их может быть несколько, соответвенно нужен от того ядра что загружено. Хотя чтобы позырить подойдет любой) - смотрим что за файл, а там compressed архив

Не вносить изменений в этот файл!!!! для разных опытов и прочих приколов обязательно!!! сделать копию!!!, и издеваться уже над ней!!!

$ mkdir ~/Нечеловеческие_опыты

$ cd ~/Нечеловеческие_опыты

$ cp /boot/initrd.img-5.10.0-17-amd64 .

$ gunzip -c initrd.img-5.10.0-17-amd64 > my_init

$ file my_init - вывод 'my_init: ASCII cpio archive (SVR4 with no CRC) - это архив. Таким образом initrd это компрессированный архив с нестандартным суфиксом

$ cpio -i < my_init

В архиве живет обвязка и небольшая файловая система: драйвера устройств (.ko) лежат в папке ./lib, их запускают утилиты из папки ./bin, которые это делают под управлением сценария ./init 

Необходимые для выполнения пункта 8 (монтирование корневой файловой системы) необходимы FS driver (драйвер файловой системы), Disk driver, Controller driver, BUS driver.

Все остальное что не нужно для монтирования корневой файловой системы загружается на на 9-ом этапе из папки /sbin/init. А именно драйвера сетевых, видео, звуковых и так далее устройств.

___________________ 

GRUB - GRand Unified Bootloader
